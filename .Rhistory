import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
X = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
X[:5]
py_install("pandas")
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
X = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
X[:5]
py_install("statsmodels")
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
X = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
X[:5]
import numpy as np
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
X = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
X[:5]
# Convert to a data frame
df = pd.DataFrame(data = X)
# Column names for the data frame
df.columns = ['a', 'b', 'c', 'd']
#Examine first 5 rows of data frame
df[:5]
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
X = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
X[:5]
# Convert to a data frame
df = pd.DataFrame(data = X)
# Column names for the data frame
df.columns = ['a', 'b', 'c', 'd']
# Examine first 5 rows of data frame
df[:5]
# Manually calculate OLS coefficients
beta_hat = np.dot(np.linalg.inv(np.dot(x.transpose(),x)), np.dot(x.transpose(),y))
print(beta_hat)
# Run OLS regression and compare results
model = sm.OLS(y, X)
results = model.fit(cov_type = 'HC1')
print(results.summary())
# Create fitted values manually
y_hat = np.dot(X, beta_hat)
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
X = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
X[:5]
# Convert to a data frame
df = pd.DataFrame(data = X)
# Column names for the data frame
df.columns = ['a', 'b', 'c', 'd']
# Examine first 5 rows of data frame
df[:5]
# Manually calculate OLS coefficients
beta_hat = np.dot(np.linalg.inv(np.dot(x.transpose(),X)), np.dot(x.transpose(),y))
print(beta_hat)
# Run OLS regression and compare results
model = sm.OLS(y, X)
results = model.fit(cov_type = 'HC1')
print(results.summary())
# Create fitted values manually
y_hat = np.dot(X, beta_hat)
import numpy as np
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
x = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
x[:5]
# Convert to a data frame
df = pd.DataFrame(data = x)
# Column names for the data frame
df.columns = ['a', 'b', 'c', 'd']
# Examine first 5 rows of data frame
df[:5]
# Manually calculate OLS coefficients
beta_hat = np.dot(np.linalg.inv(np.dot(x.transpose(),x)), np.dot(x.transpose(),y))
print(beta_hat)
# Run OLS regression and compare results
model = sm.OLS(y, x)
results = model.fit(cov_type = 'HC1')
print(results.summary())
# Create fitted values manually
y_hat = np.dot(x, beta_hat)
import pandas as pd
import numpy as np
import statsmodels.api as st
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
x = np.column_stack((x0, x1, x2, x3))
# Examine first 5 rows of X
x[:5]
# Convert to a data frame
df = pd.DataFrame(data = x)
# Column names for the data frame
df.columns = ['a', 'b', 'c', 'd']
# Examine first 5 rows of data frame
df[:5]
# Manually calculate OLS coefficients
beta_hat = np.dot(np.linalg.inv(np.dot(x.transpose(),x)), np.dot(x.transpose(),y))
print(beta_hat)
# Run OLS regression and compare results
model = st.OLS(y, x)
results = model.fit(cov_type = 'HC1')
print(results.summary())
# Create fitted values manually
y_hat = np.dot(x, beta_hat)
import pandas as pd
import numpy as np
import statsmodels.api as st
# Number of observations
N = 500
# Generate data for the independent variables
np.random.seed(4)
x0 = np.ones(500)
x1 = np.random.normal(0, 1, 500)
x2 = np.random.normal(2, 4, 500)
x3 = np.random.normal(-1, 0.5, 500)
# Create independent variable and define the betas
y = 2 + 5*x1 -2*x2 + 1.5*x3 + np.random.normal(0, 1, 500)
# Create a matrix of independent variables
x = np.column_stack((x0, x1, x2, x3))
# Convert to a data frame
df = pd.DataFrame(data = x)
# Examine first 5 rows of data frame
df[:5]
# Manually calculate OLS coefficients
beta_hat = np.dot(np.linalg.inv(np.dot(x.transpose(),x)), np.dot(x.transpose(),y))
print(beta_hat)
# Run OLS regression and compare results
model = st.OLS(y, x)
results = model.fit(cov_type = 'HC1')
print(results.summary())
